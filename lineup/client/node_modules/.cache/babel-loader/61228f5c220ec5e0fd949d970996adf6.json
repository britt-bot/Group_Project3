{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mark.morrison\\\\Desktop\\\\I DO CODE\\\\Group_Project3\\\\lineup\\\\client\\\\src\\\\pages\\\\Discover.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\"; // import API from \"../utils/API\";\n// import axios from \"axios\";\n\nfunction Discover() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"In Progress, please return \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 36\n    }\n  }, \"home\"), \".\"));\n} // function Discover() {\n// class Discover extends Component {\n//   state = {\n//     image: \"\",\n//     match: false,\n//     matchCount: 0\n//   };\n//   // When the component mounts, load the next dog to be displayed\n//   componentDidMount() {\n//     this.loadNextDog();\n//   }\n//   handleBtnClick = event => {\n//     // Get the data-value of the clicked button\n//     const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n//     // Clone this.state to the newState object\n//     // We'll modify this object and use it to set our component's state\n//     const newState = { ...this.state };\n//     if (btnType === \"pick\") {\n//       // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n//       newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n//       // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n//       newState.matchCount = newState.match\n// ? newState.matchCount + 1\n//         : newState.matchCount;\n//     } else {\n//       // If we thumbs down'ed the dog, we haven't matched with it\n//       newState.match = false;\n//     }\n//     // Replace our component's state with newState, load the next dog image\n//     this.setState(newState);\n//     this.loadNextDog();\n//   };\n//   loadNextDog = () => {\n//     API.getRandomDog()\n//       .then(res =>\n//         this.setState({\n//           image: res.data.message\n//         })\n//       )\n//       .catch(err => console.log(err));\n//   };\n// function Discover() {\n//   return (\n//     <DiscoverCarousel />\n// WORKING ON SWIPE RIGHT //\n// const data = ['Alexandre', 'Thomas', 'Lucien']\n// const Wrapper = () => {\n//   return (\n// \t  <Cards onEnd={action('end')} className='master-root'>\n//         {data.map(item =>\n//           <Card\n//             onSwipeLeft={action('swipe left')}\n//             onSwipeRight={action('swipe right')}>\n//             <h2>{item}</h2>\n//           </Card>\n//         )}\n//       </Cards>\n//   )\n// }\n//   );\n// }\n\n\nexport default Discover;","map":{"version":3,"sources":["C:/Users/mark.morrison/Desktop/I DO CODE/Group_Project3/lineup/client/src/pages/Discover.js"],"names":["React","Link","Discover"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;AACA;;AAEA,SAASC,QAAT,GAAoB;AAClB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAC6B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD7B,MADF,CADF;AAOD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import API from \"../utils/API\";\r\n// import axios from \"axios\";\r\n\r\nfunction Discover() {\r\n  return (\r\n    <div>\r\n      <h2>\r\n        In Progress, please return <Link to=\"/\">home</Link>.\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\n// function Discover() {\r\n// class Discover extends Component {\r\n//   state = {\r\n//     image: \"\",\r\n//     match: false,\r\n//     matchCount: 0\r\n//   };\r\n\r\n//   // When the component mounts, load the next dog to be displayed\r\n//   componentDidMount() {\r\n//     this.loadNextDog();\r\n//   }\r\n\r\n//   handleBtnClick = event => {\r\n//     // Get the data-value of the clicked button\r\n//     const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\r\n//     // Clone this.state to the newState object\r\n//     // We'll modify this object and use it to set our component's state\r\n//     const newState = { ...this.state };\r\n\r\n//     if (btnType === \"pick\") {\r\n//       // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\r\n//       newState.match = 1 === Math.floor(Math.random() * 5) + 1;\r\n\r\n//       // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\r\n//       newState.matchCount = newState.match\r\n// ? newState.matchCount + 1\r\n//         : newState.matchCount;\r\n//     } else {\r\n//       // If we thumbs down'ed the dog, we haven't matched with it\r\n//       newState.match = false;\r\n//     }\r\n//     // Replace our component's state with newState, load the next dog image\r\n//     this.setState(newState);\r\n//     this.loadNextDog();\r\n//   };\r\n\r\n//   loadNextDog = () => {\r\n//     API.getRandomDog()\r\n//       .then(res =>\r\n//         this.setState({\r\n//           image: res.data.message\r\n//         })\r\n//       )\r\n//       .catch(err => console.log(err));\r\n//   };\r\n\r\n// function Discover() {\r\n//   return (\r\n//     <DiscoverCarousel />\r\n\r\n// WORKING ON SWIPE RIGHT //\r\n\r\n// const data = ['Alexandre', 'Thomas', 'Lucien']\r\n\r\n// const Wrapper = () => {\r\n//   return (\r\n// \t  <Cards onEnd={action('end')} className='master-root'>\r\n//         {data.map(item =>\r\n//           <Card\r\n//             onSwipeLeft={action('swipe left')}\r\n//             onSwipeRight={action('swipe right')}>\r\n//             <h2>{item}</h2>\r\n//           </Card>\r\n//         )}\r\n//       </Cards>\r\n//   )\r\n// }\r\n//   );\r\n// }\r\n\r\nexport default Discover;\r\n"]},"metadata":{},"sourceType":"module"}