{"ast":null,"code":"var _jsxFileName = \"/Users/jakers/Desktop/Group_Project3/lineup/client/src/pages/Discover.js\";\nimport React from \"react\";\nimport DiscoverCarousel from \"../components/DiscoverCarousel\"; // import SearchResultsCard from \"../components/SearchResultsCard\";\n// import { Row } from \"react-bootstrap\";\n// import API from \"../utils/API\";\n// import axios from \"axios\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './index.css';\n// function Discover() {\n// class Discover extends Component {\n//   state = {\n//     image: \"\",\n//     match: false,\n//     matchCount: 0\n//   };\n//   // When the component mounts, load the next dog to be displayed\n//   componentDidMount() {\n//     this.loadNextDog();\n//   }\n//   handleBtnClick = event => {\n//     // Get the data-value of the clicked button\n//     const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n//     // Clone this.state to the newState object\n//     // We'll modify this object and use it to set our component's state\n//     const newState = { ...this.state };\n//     if (btnType === \"pick\") {\n//       // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n//       newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n//       // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n//       newState.matchCount = newState.match\n// ? newState.matchCount + 1\n//         : newState.matchCount;\n//     } else {\n//       // If we thumbs down'ed the dog, we haven't matched with it\n//       newState.match = false;\n//     }\n//     // Replace our component's state with newState, load the next dog image\n//     this.setState(newState);\n//     this.loadNextDog();\n//   };\n//   loadNextDog = () => {\n//     API.getRandomDog()\n//       .then(res =>\n//         this.setState({\n//           image: res.data.message\n//         })\n//       )\n//       .catch(err => console.log(err));\n//   };\n\nfunction Discover() {\n  return /*#__PURE__*/React.createElement(DiscoverCarousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }) // WORKING ON SWIPE RIGHT //\n  // const data = ['Alexandre', 'Thomas', 'Lucien']\n  // const Wrapper = () => {\n  //   return (\n  // \t  <Cards onEnd={action('end')} className='master-root'>\n  //         {data.map(item =>\n  //           <Card\n  //             onSwipeLeft={action('swipe left')}\n  //             onSwipeRight={action('swipe right')}>\n  //             <h2>{item}</h2>\n  //           </Card>\n  //         )}\n  //       </Cards>\n  //   )\n  // }\n  ;\n}\n\nexport default Discover;","map":{"version":3,"sources":["/Users/jakers/Desktop/Group_Project3/lineup/client/src/pages/Discover.js"],"names":["React","DiscoverCarousel","Discover"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,GAAoB;AAClB,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAGE;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBF;AAqBD;;AAED,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport DiscoverCarousel from \"../components/DiscoverCarousel\";\n// import SearchResultsCard from \"../components/SearchResultsCard\";\n// import { Row } from \"react-bootstrap\";\n// import API from \"../utils/API\";\n// import axios from \"axios\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './index.css';\n\n// function Discover() {\n// class Discover extends Component {\n//   state = {\n//     image: \"\",\n//     match: false,\n//     matchCount: 0\n//   };\n\n//   // When the component mounts, load the next dog to be displayed\n//   componentDidMount() {\n//     this.loadNextDog();\n//   }\n\n//   handleBtnClick = event => {\n//     // Get the data-value of the clicked button\n//     const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n//     // Clone this.state to the newState object\n//     // We'll modify this object and use it to set our component's state\n//     const newState = { ...this.state };\n\n//     if (btnType === \"pick\") {\n//       // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n//       newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n\n//       // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n//       newState.matchCount = newState.match\n// ? newState.matchCount + 1\n//         : newState.matchCount;\n//     } else {\n//       // If we thumbs down'ed the dog, we haven't matched with it\n//       newState.match = false;\n//     }\n//     // Replace our component's state with newState, load the next dog image\n//     this.setState(newState);\n//     this.loadNextDog();\n//   };\n\n//   loadNextDog = () => {\n//     API.getRandomDog()\n//       .then(res =>\n//         this.setState({\n//           image: res.data.message\n//         })\n//       )\n//       .catch(err => console.log(err));\n//   };\n\nfunction Discover() {\n  return (\n    <DiscoverCarousel />\n\n    // WORKING ON SWIPE RIGHT //\n\n    // const data = ['Alexandre', 'Thomas', 'Lucien']\n\n    // const Wrapper = () => {\n    //   return (\n    // \t  <Cards onEnd={action('end')} className='master-root'>\n    //         {data.map(item =>\n    //           <Card\n    //             onSwipeLeft={action('swipe left')}\n    //             onSwipeRight={action('swipe right')}>\n    //             <h2>{item}</h2>\n    //           </Card>\n    //         )}\n    //       </Cards>\n    //   )\n    // }\n  );\n}\n\nexport default Discover;\n"]},"metadata":{},"sourceType":"module"}