{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcbri\\\\Desktop\\\\School\\\\Homework\\\\Group_Project3\\\\lineup\\\\client\\\\src\\\\pages\\\\Search.js\";\nimport React from \"react\"; // import { Container, Alert } from 'react-bootstrap';\n// import API from \"../utils/API\";\n// import axios from \"axios\";\n// import SearchForm from \"../components/SearchForm\";\n// import SearchResults from \"../components/SearchResults\";\n// import \"./index.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport SearchResultsCard from \"../components/SearchResultsCard\";\n\nfunction Search(props) {\n  var _this = this;\n\n  var festivals = props.location.state.festivals;\n  var filteredFestivals = festivals.filter(function (v, i, a) {\n    return a.findIndex(function (t) {\n      return t.name === v.name;\n    }) === i;\n  });\n  return filteredFestivals.map(function (festival) {\n    return /*#__PURE__*/React.createElement(SearchResultsCard, {\n      key: festival.name,\n      festival: festival,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  });\n} // class Search extends Component {\n//   state = {\n//     search: \"\",\n//     breeds: [],\n//     results: [],\n//     error: \"\"\n//   };\n//   // When the component mounts, get a list of all available base breeds and update this.state.breeds\n//   componentDidMount() {\n//     API.getBaseBreedsList()\n//       .then(res => this.setState({ breeds: res.data.message }))\n//       .catch(err => console.log(err));\n//   }\n//   handleInputChange = event => {\n//     this.setState({ search: event.target.value });\n//   };\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     API.getDogsOfBreed(this.state.search)\n//       .then(res => {\n//         if (res.data.status === \"error\") {\n//           throw new Error(res.data.message);\n//         }\n//         this.setState({ results: res.data.message, error: \"\" });\n//       })\n//       .catch(err => this.setState({ error: err.message }));\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <Container style={{ minHeight: \"80%\" }}>\n//           <h1 className=\"text-center\">Search By Breed!</h1>\n//           <Alert\n//             type=\"danger\"\n//             style={{ opacity: this.state.error ? 1 : 0, marginBottom: 10 }}\n//           >\n//             {this.state.error}\n//           </Alert>\n//           <SearchForm\n//             handleFormSubmit={this.handleFormSubmit}\n//             handleInputChange={this.handleInputChange}\n//             breeds={this.state.breeds}\n//           />\n//           <SearchResults results={this.state.results} />\n//         </Container>\n//       </div>\n//     );\n//   }\n// }\n\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/mcbri/Desktop/School/Homework/Group_Project3/lineup/client/src/pages/Search.js"],"names":["React","SearchResultsCard","Search","props","festivals","location","state","filteredFestivals","filter","v","i","a","findIndex","t","name","map","festival"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,MAAMC,SAAS,GAAGD,KAAK,CAACE,QAAN,CAAeC,KAAf,CAAqBF,SAAvC;AACA,MAAMG,iBAAiB,GAAGH,SAAS,CAACI,MAAV,CACxB,UAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAAA,WAAaA,CAAC,CAACC,SAAF,CAAY,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAF,KAAWL,CAAC,CAACK,IAApB;AAAA,KAAZ,MAA0CJ,CAAvD;AAAA,GADwB,CAA1B;AAGA,SAAOH,iBAAiB,CAACQ,GAAlB,CAAsB,UAACC,QAAD,EAAc;AACzC,wBAAO,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAEA,QAAQ,CAACF,IAAjC;AAAuC,MAAA,QAAQ,EAAEE,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFM,CAAP;AAGD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAed,MAAf","sourcesContent":["import React from \"react\";\n// import { Container, Alert } from 'react-bootstrap';\n// import API from \"../utils/API\";\n// import axios from \"axios\";\n// import SearchForm from \"../components/SearchForm\";\n// import SearchResults from \"../components/SearchResults\";\n// import \"./index.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport SearchResultsCard from \"../components/SearchResultsCard\";\n\nfunction Search(props) {\n  const festivals = props.location.state.festivals;\n  const filteredFestivals = festivals.filter(\n    (v, i, a) => a.findIndex((t) => t.name === v.name) === i\n  );\n  return filteredFestivals.map((festival) => {\n    return <SearchResultsCard key={festival.name} festival={festival} />;\n  });\n}\n\n// class Search extends Component {\n//   state = {\n//     search: \"\",\n//     breeds: [],\n//     results: [],\n//     error: \"\"\n//   };\n\n//   // When the component mounts, get a list of all available base breeds and update this.state.breeds\n//   componentDidMount() {\n//     API.getBaseBreedsList()\n//       .then(res => this.setState({ breeds: res.data.message }))\n//       .catch(err => console.log(err));\n//   }\n\n//   handleInputChange = event => {\n//     this.setState({ search: event.target.value });\n//   };\n\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     API.getDogsOfBreed(this.state.search)\n//       .then(res => {\n//         if (res.data.status === \"error\") {\n//           throw new Error(res.data.message);\n//         }\n//         this.setState({ results: res.data.message, error: \"\" });\n//       })\n//       .catch(err => this.setState({ error: err.message }));\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <Container style={{ minHeight: \"80%\" }}>\n//           <h1 className=\"text-center\">Search By Breed!</h1>\n//           <Alert\n//             type=\"danger\"\n//             style={{ opacity: this.state.error ? 1 : 0, marginBottom: 10 }}\n//           >\n//             {this.state.error}\n//           </Alert>\n//           <SearchForm\n//             handleFormSubmit={this.handleFormSubmit}\n//             handleInputChange={this.handleInputChange}\n//             breeds={this.state.breeds}\n//           />\n//           <SearchResults results={this.state.results} />\n//         </Container>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}