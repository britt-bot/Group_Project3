{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jakers/Desktop/Group_Project3/lineup/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jakers/Desktop/Group_Project3/lineup/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jakers/Desktop/Group_Project3/lineup/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jakers/Desktop/Group_Project3/lineup/client/src/components/SearchBtn/index.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Searchbtn() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var url, response, searchResult, filteredEvents, festivals, resultsPages, index;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.prev = 1;\n              url = \"https://app.ticketmaster.com/discovery/v2/events?apikey=\".concat(process.env.REACT_APP_EVENT_API_KEY, \"&keyword=\");\n              _context.next = 5;\n              return axios.get(url + req.params.query + '&locale=en-us&countryCode=US&segmentName=music&page=' + page);\n\n            case 5:\n              response = _context.sent;\n              searchResult = response.data._embedded.events;\n              filteredEvents = searchResult.filter(function (events) {\n                return 'name' in events;\n              });\n              festivals = filteredEvents.map(function (event) {\n                return {\n                  name: event.name,\n                  id: event.id,\n                  summary: event.description,\n                  logo: event.images[event.images.length - 1].url,\n                  status: event.dates.status.code,\n                  span: event.dates.spanMultipleDays,\n                  date: event.dates.start.localDate,\n                  start: event.dates.start.localTime,\n                  venues: event._embedded.venues[0].name,\n                  address: event._embedded.venues[0].address.line1,\n                  city: event._embedded.venues[0].city.name,\n                  state: event._embedded.venues[0].state.stateCode\n                };\n              });\n              resultsPages = [];\n\n              for (index = 1; index <= response.data.page.totalPages; index++) {\n                resultsPages.push({\n                  index: index,\n                  href: \"/results/\" + req.params.query + \"/\" + index\n                });\n              }\n\n              console.log(resultsPages);\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              res.status(400).json({\n                \"message\": \"No concerts found under that query.\"\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 14]]);\n    }));\n\n    return function handleClick(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // const url = `https://app.ticketmaster.com/discovery/v2/events?apikey=${process.env.REACT_APP_EVENT_API_KEY}&keyword=`;\n  // const response = await axios.get(\n  //   url + search + \"&locale=en-us&countryCode=US&segmentName=music&page=1\"\n  // );\n\n\n  var handleChange = function handleChange(event) {\n    setSearch(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    className: \"searchbtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"Search\",\n    className: \" mr-sm-2\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"searchclick\",\n    variant: \"outline-dark\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ion-icon\", {\n    name: \"search-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n}\n\n;\nexport default Searchbtn;","map":{"version":3,"sources":["/Users/jakers/Desktop/Group_Project3/lineup/client/src/components/SearchBtn/index.js"],"names":["React","Button","Form","FormControl","useState","axios","Searchbtn","search","setSearch","handleClick","event","preventDefault","url","process","env","REACT_APP_EVENT_API_KEY","get","req","params","query","page","response","searchResult","data","_embedded","events","filteredEvents","filter","festivals","map","name","id","summary","description","logo","images","length","status","dates","code","span","spanMultipleDays","date","start","localDate","localTime","venues","address","line1","city","state","stateCode","resultsPages","index","totalPages","push","href","console","log","res","json","handleChange","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Searchbtn() {\n\n  const [search, setSearch] = useState(\"\");\n\n  const handleClick = async (event) => {\n    event.preventDefault();\n\n  try {\n\n    const url = `https://app.ticketmaster.com/discovery/v2/events?apikey=${process.env.REACT_APP_EVENT_API_KEY}&keyword=`\n\n    const response = await axios.get(url + req.params.query + '&locale=en-us&countryCode=US&segmentName=music&page=' + page);\n    let searchResult = response.data._embedded.events;\n\n    let filteredEvents = searchResult.filter(events => {\n    return ('name' in events)\n    });\n\n    let festivals = filteredEvents.map((event) => {\n\n      return {\n        name: event.name,\n        id: event.id,\n        summary: event.description,\n        logo: event.images[event.images.length - 1].url,\n        status: event.dates.status.code,\n        span: event.dates.spanMultipleDays,\n        date: event.dates.start.localDate,\n        start: event.dates.start.localTime,\n        venues: event._embedded.venues[0].name,\n        address: event._embedded.venues[0].address.line1,\n        city: event._embedded.venues[0].city.name,\n        state: event._embedded.venues[0].state.stateCode\n      }\n    });\n\n    let resultsPages = [];\n    for (let index = 1; index <= response.data.page.totalPages; index++) {\n      resultsPages.push({index:index,href:\"/results/\"+req.params.query+\"/\"+index});\n    }\n    console.log(resultsPages);\n\n    } catch (err) {\n      console.log(err);\n      res.status(400).json({\"message\": \"No concerts found under that query.\"});\n    }\n  };\n\n    // const url = `https://app.ticketmaster.com/discovery/v2/events?apikey=${process.env.REACT_APP_EVENT_API_KEY}&keyword=`;\n\n    // const response = await axios.get(\n    //   url + search + \"&locale=en-us&countryCode=US&segmentName=music&page=1\"\n    // );\n\n  const handleChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  return (\n    <Form inline className=\"searchbtn\">\n      <FormControl\n        type=\"text\"\n        placeholder=\"Search\"\n        className=\" mr-sm-2\"\n        onChange={handleChange}\n      />\n      <Button\n        className=\"searchclick\"\n        variant=\"outline-dark\"\n        onClick={handleClick}\n      >\n        <ion-icon name=\"search-outline\"></ion-icon>\n      </Button>\n    </Form>\n  );\n};\n\nexport default Searchbtn;\n"]},"metadata":{},"sourceType":"module"}